{"version":3,"sources":["utils/fetchClient.ts","types/TodoStatus.ts","api/todos.ts","components/UpdateTodosTitle/UpdateTodosTitle.tsx","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoHeader/TodoHeader.tsx","components/TodoFooter/TodoFooter.tsx","components/TodoError/TodoError.tsx","App.tsx","index.tsx"],"names":["BASE_URL","wait","delay","Promise","resolve","setTimeout","request","url","method","data","options","body","JSON","stringify","headers","then","fetch","response","ok","Error","json","TodoStatus","client","updateTodo","todoId","todo","removeTodo","id","UpdateTodosTitle","updateTitle","setEditingTodo","useState","title","newTitle","setNewTitle","onSubmit","event","preventDefault","type","className","placeholder","value","onChange","target","onBlur","onKeyUp","e","key","autoFocus","TodoItem","handleChangeCompleted","deleteTodo","deleteTodoId","editingTodo","loadingTodo","handleDoubleClick","isLoadingCompleted","completed","checked","onDoubleClick","onClick","TodoList","todos","tempTodo","map","TodoHeader","handleToggleAll","addTodo","isDisabled","notCompletedTodosCount","newTodo","setNewTodo","length","classNames","active","disabled","TodoFooter","handleFilter","handleClearCompleted","activeFilter","completedTodosCount","href","All","selected","Active","Completed","TodoError","error","setError","hidden","USER_ID","App","setTodos","setIsLoadingCompleted","setIsDisabled","setTempTodo","setLoadingTodo","setActiveFilter","setDeleteTodoId","filter","useEffect","userId","res","catch","timer","clearTimeout","result","finally","filteredTodos","filterBy","item","statusTodos","forEach","unCompleted","some","trim","prevTodo","currentItem","find","todoTitle","reduce","prev","items","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48b122ac.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nconst BASE_URL = 'https://mate.academy/students-api';\n\n// returns a promise resolved after a given delay\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\n// To have autocompletion and avoid mistypes\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null, // we can send any data to the server\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    // We add body and Content-Type only for the requests with data\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  // we wait for testing purpose to see loaders\n  return wait(300)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error();\n      }\n\n      return response.json();\n    });\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: any) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: any) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","// eslint-disable-next-line no-shadow\nexport enum TodoStatus {\n  All = 'All',\n  Active = 'Active',\n  Completed = 'Completed',\n}\n","import { Todo } from '../types/Todo';\nimport { client } from '../utils/fetchClient';\n\nexport const getTodos = (userId: number) => {\n  return client.get<Todo[]>(`/todos?userId=${userId}`);\n};\n\nexport const createTodo = (userId: number, todo: Todo) => {\n  return client.post<Todo>(`/todos?userId=${userId}`, todo);\n};\n\nexport const updateTodo = (todoId: number, todo: Todo) => {\n  return client.patch<Todo>(`/todos/${todoId}`, todo);\n};\n\nexport const removeTodo = (id: number) => {\n  return client.delete(`/todos/${id}`);\n};\n","import React, { useState } from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n  updateTitle: (id: number, value: string) => void,\n  setEditingTodo: (value: number) => void,\n};\n\nexport const UpdateTodosTitle: React.FC<Props> = ({\n  todo,\n  updateTitle,\n  setEditingTodo,\n}) => {\n  const [newTitle, setNewTitle] = useState(todo.title);\n\n  const handleKeyUp = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Escape') {\n      setNewTitle(todo.title);\n      setEditingTodo(0);\n    }\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setNewTitle(event.target.value);\n  };\n\n  const handleBlur = () => {\n    if (todo.title !== newTitle) {\n      updateTitle(todo.id, newTitle);\n    } else {\n      setEditingTodo(0);\n    }\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (todo.title !== newTitle) {\n      updateTitle(todo.id, newTitle);\n    } else {\n      setNewTitle(todo.title);\n      setEditingTodo(0);\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          className=\"todo__title-field\"\n          placeholder=\"Empty todo will be deleted\"\n          value={newTitle}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          onKeyUp={handleKeyUp}\n          autoFocus // eslint-disable-line\n        />\n      </form>\n    </>\n  );\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { UpdateTodosTitle } from '../UpdateTodosTitle/UpdateTodosTitle';\n\ntype Props = {\n  todo: Todo,\n  handleChangeCompleted: (id: number, title: string) => void,\n  handleDoubleClick: (id: number) => void,\n  updateTitle: (id: number, value: string) => void,\n  deleteTodo: (id: number) => void,\n  setEditingTodo: (value: number) => void,\n  deleteTodoId: number,\n  editingTodo: number,\n  loadingTodo: number,\n  isLoadingCompleted: boolean,\n};\n\nexport const TodoItem: React.FC<Props> = ({\n  handleChangeCompleted,\n  todo,\n  deleteTodo,\n  deleteTodoId,\n  editingTodo,\n  loadingTodo,\n  handleDoubleClick,\n  updateTitle,\n  setEditingTodo,\n  isLoadingCompleted,\n}) => {\n  const { id, title, completed } = todo;\n\n  return (\n    <div\n      className={`todo ${completed && ('completed')}`}\n    >\n      <label className=\"todo__status-label\">\n        <input\n          type=\"checkbox\"\n          className=\"todo__status\"\n          checked={completed}\n          onChange={() => handleChangeCompleted(id, title)}\n        />\n      </label>\n      {editingTodo === id\n        ? (\n          <UpdateTodosTitle\n            updateTitle={updateTitle}\n            setEditingTodo={setEditingTodo}\n            todo={todo}\n          />\n        )\n        : (\n          <>\n            <span\n              className=\"todo__title\"\n              onDoubleClick={() => handleDoubleClick(id)}\n            >\n              {title}\n            </span>\n\n            <button\n              type=\"button\"\n              className=\"todo__remove\"\n              onClick={() => deleteTodo(id)}\n            >\n              ×\n            </button>\n          </>\n        )}\n\n      <div className={`modal overlay\n      ${(!id\n        || deleteTodoId === id\n        || loadingTodo === id\n        || isLoadingCompleted\n    ) && ('is-active')}`}\n      >\n        <div className=\"modal-background has-background-white-ter\" />\n        <div className=\"loader\" />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem/TodoItem';\n\ntype Props = {\n  todos: Todo[],\n  handleChangeCompleted: (id: number) => void,\n  handleDoubleClick: (id: number) => void,\n  updateTitle: (id: number, value: string) => void,\n  setEditingTodo: (value: number) => void,\n  tempTodo: Todo | null,\n  deleteTodo: (id: number) => void,\n  deleteTodoId: number,\n  editingTodo: number,\n  loadingTodo: number,\n  isLoadingCompleted: boolean,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  handleChangeCompleted,\n  handleDoubleClick,\n  updateTitle,\n  deleteTodo,\n  setEditingTodo,\n  tempTodo,\n  deleteTodoId,\n  editingTodo,\n  loadingTodo,\n  isLoadingCompleted,\n}) => (\n  <>\n    {todos.map((todo) => {\n      return (\n        <TodoItem\n          handleChangeCompleted={handleChangeCompleted}\n          handleDoubleClick={handleDoubleClick}\n          updateTitle={updateTitle}\n          deleteTodo={deleteTodo}\n          setEditingTodo={setEditingTodo}\n          editingTodo={editingTodo}\n          todo={todo}\n          key={todo.id}\n          deleteTodoId={deleteTodoId}\n          loadingTodo={loadingTodo}\n          isLoadingCompleted={isLoadingCompleted}\n        />\n      );\n    })}\n\n    {tempTodo && (\n      <TodoItem\n        todo={tempTodo}\n        handleChangeCompleted={handleChangeCompleted}\n        handleDoubleClick={handleDoubleClick}\n        updateTitle={updateTitle}\n        deleteTodo={deleteTodo}\n        setEditingTodo={setEditingTodo}\n        deleteTodoId={deleteTodoId}\n        loadingTodo={loadingTodo}\n        editingTodo={+tempTodo}\n        isLoadingCompleted={isLoadingCompleted}\n      />\n    )}\n  </>\n);\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  handleToggleAll: () => void,\n  addTodo: (title: string) => void,\n  todos: Todo[];\n  notCompletedTodosCount: number,\n  isDisabled: boolean,\n};\n\nexport const TodoHeader: React.FC<Props> = ({\n  handleToggleAll,\n  todos,\n  addTodo,\n  isDisabled,\n  notCompletedTodosCount,\n}) => {\n  const [newTodo, setNewTodo] = useState('');\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (newTodo !== '') {\n      addTodo(newTodo);\n      setNewTodo('');\n    }\n  };\n\n  return (\n    <header className=\"todoapp__header\">\n      {todos.length > 0 && (\n        <button // eslint-disable-line\n          type=\"button\"\n          className={classNames('todoapp__toggle-all',\n            { active: notCompletedTodosCount === 0 })}\n          onClick={handleToggleAll}\n        />\n      )}\n\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          className=\"todoapp__new-todo\"\n          placeholder=\"What needs to be done?\"\n          value={newTodo}\n          onChange={({ target }) => setNewTodo(target.value)}\n          disabled={isDisabled}\n        />\n      </form>\n    </header>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { TodoStatus } from '../../types/TodoStatus';\n\ntype Props = {\n  handleFilter: (value: TodoStatus) => void,\n  handleClearCompleted: () => void,\n  activeFilter: TodoStatus,\n  completedTodosCount: number,\n  notCompletedTodosCount: number,\n};\n\nexport const TodoFooter: React.FC<Props> = ({\n  handleFilter,\n  handleClearCompleted,\n  activeFilter,\n  completedTodosCount,\n  notCompletedTodosCount,\n}) => {\n  return (\n    <>\n      <span className=\"todo-count\">\n        {`${notCompletedTodosCount} items left`}\n      </span>\n      <nav className=\"filter\">\n        <a\n          href={`#/${TodoStatus.All}`}\n          className={classNames('filter__link', {\n            selected: activeFilter === TodoStatus.All,\n          })}\n          onClick={() => handleFilter(TodoStatus.All)}\n        >\n          {TodoStatus.All}\n        </a>\n\n        <a\n          href={`#/${TodoStatus.Active}`}\n          className={classNames('filter__link', {\n            selected: activeFilter === TodoStatus.Active,\n          })}\n          onClick={() => handleFilter(TodoStatus.Active)}\n        >\n          {TodoStatus.Active}\n        </a>\n\n        <a\n          href={`#/${TodoStatus.Completed}`}\n          className={classNames('filter__link', {\n            selected: activeFilter === TodoStatus.Completed,\n          })}\n          onClick={() => handleFilter(TodoStatus.Completed)}\n        >\n          {TodoStatus.Completed}\n        </a>\n      </nav>\n\n      <button\n        type=\"button\"\n        className=\"todoapp__clear-completed\"\n        onClick={handleClearCompleted}\n      >\n        {completedTodosCount > 0 && ('Clear completed')}\n      </button>\n    </>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n  error: string,\n  setError: (value: string) => void,\n};\n\nexport const TodoError: React.FC<Props> = ({ error, setError }) => (\n  <div className={classNames(\n    'notification is-danger is-light has-text-weight-normal', {\n      hidden: !error,\n    },\n  )}\n  >\n\n    <button\n      type=\"button\"\n      className=\"delete\"\n      onClick={() => setError('')}\n    >\n      х\n    </button>\n    {error}\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { UserWarning } from './UserWarning';\nimport { Todo } from './types/Todo';\nimport {\n  createTodo,\n  getTodos,\n  removeTodo,\n  updateTodo,\n} from './api/todos';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { TodoHeader } from './components/TodoHeader/TodoHeader';\nimport { TodoFooter } from './components/TodoFooter/TodoFooter';\nimport { TodoError } from './components/TodoError/TodoError';\nimport { TodoStatus } from './types/TodoStatus';\n\nconst statusTodos = (todos: Todo[], filterBy: TodoStatus) => {\n  let filteredTodos = todos;\n\n  switch (filterBy) {\n    case TodoStatus.Active:\n      filteredTodos = todos.filter(item => !item.completed);\n      break;\n    case TodoStatus.Completed:\n      filteredTodos = todos.filter(item => item.completed);\n      break;\n    case TodoStatus.All:\n    default:\n      break;\n  }\n\n  return filteredTodos;\n};\n\nconst USER_ID = 6709;\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoadingCompleted, setIsLoadingCompleted] = useState(false);\n  const [isDisabled, setIsDisabled] = useState(false);\n  const [tempTodo, setTempTodo] = useState<Todo | null>(null);\n  const [editingTodo, setEditingTodo] = useState(0);\n  const [loadingTodo, setLoadingTodo] = useState(0);\n  const [activeFilter, setActiveFilter] = useState<TodoStatus>(TodoStatus.All);\n  const [error, setError] = useState('');\n  const [deleteTodoId, setDeleteTodoId] = useState(0);\n  const notCompletedTodosCount = todos.filter(todo => !todo.completed).length;\n  const completedTodosCount = todos.filter(todo => todo.completed).length;\n\n  useEffect(() => {\n    getTodos(USER_ID)\n      .then((res) => {\n        setTodos(res);\n      })\n      .catch(() => {\n        setError('Unable to add a todo');\n\n        const timer = setTimeout(() => {\n          setError('');\n        }, 3000);\n\n        return () => {\n          clearTimeout(timer);\n        };\n      });\n  }, []);\n\n  const addTodo = (title: string) => {\n    if (!title.trim()) {\n      setError('Title can`t be empty');\n      setTimeout(() => {\n        setError('');\n      }, 3000);\n    } else {\n      setEditingTodo(0);\n\n      const newTodo = {\n        id: 0,\n        userId: USER_ID,\n        title,\n        completed: false,\n      };\n\n      setTempTodo(newTodo);\n      setIsDisabled(true);\n      setError('');\n\n      createTodo(USER_ID, newTodo)\n        .then((res) => {\n          setTodos((prevTodo) => {\n            return [...prevTodo, res];\n          });\n        })\n        .catch(() => {\n          setError('Unable to add a todo');\n\n          const timer = setTimeout(() => {\n            setError('');\n          }, 3000);\n\n          return () => {\n            clearTimeout(timer);\n          };\n        })\n        .finally(() => {\n          setIsDisabled(false);\n          setTempTodo(null);\n        });\n    }\n  };\n\n  const deleteTodo = (id: number) => {\n    setDeleteTodoId(id);\n\n    removeTodo(id)\n      .then(() => {\n        const result = todos.filter(todo => todo.id !== id);\n\n        setTodos(result);\n        setError('');\n      })\n      .catch(() => {\n        setError('Unable to delete a todo');\n\n        const timer = setTimeout(() => {\n          setError('');\n        }, 3000);\n\n        return () => {\n          clearTimeout(timer);\n        };\n      })\n      .finally(() => {\n        setDeleteTodoId(0);\n      });\n  };\n\n  const handleChangeCompleted = (id: number) => {\n    const currentItem = todos.find(item => item.id === id);\n    const todoTitle = todos.reduce((prev, { title }) => ({ ...prev, title }));\n    const todo = {\n      id,\n      userId: USER_ID,\n      title: todoTitle.title,\n      completed: false,\n    };\n\n    setLoadingTodo(id);\n\n    updateTodo(id, todo)\n      .then((data) => {\n        const completed = todos.map(item => (\n          item.id === id\n            ? { ...data, completed: !currentItem?.completed } : item\n        ));\n\n        setTodos(completed);\n      })\n      .catch(() => {\n        setError('Unable to update a todo');\n\n        const timer = setTimeout(() => {\n          setError('');\n        }, 3000);\n\n        return () => {\n          clearTimeout(timer);\n        };\n      })\n      .finally(() => {\n        setLoadingTodo(0);\n      });\n  };\n\n  const handleClearCompleted = () => {\n    todos.forEach(item => {\n      if (item.completed) {\n        setIsLoadingCompleted(true);\n        removeTodo(item.id)\n          .then(() => {\n            const filteredTodos = todos.filter(items => !items.completed);\n\n            setTodos(filteredTodos);\n          })\n          .catch(() => {\n            setError('Unable to delete a todo');\n\n            const timer = setTimeout(() => {\n              setError('');\n            }, 3000);\n\n            return () => {\n              clearTimeout(timer);\n            };\n          })\n          .finally(() => setIsLoadingCompleted(false));\n      }\n    });\n  };\n\n  const handleToggleAll = () => {\n    todos.forEach((item) => {\n      setIsLoadingCompleted(true);\n      updateTodo(item.id, item)\n        .then(() => {\n          const completed = todos.map(todo => (\n            { ...todo, completed: true }\n          ));\n\n          const unCompleted = todos.map(todo => (\n            { ...todo, completed: false }\n          ));\n\n          if (todos.some(todo => !todo.completed)) {\n            setTodos(completed);\n          } else {\n            setTodos(unCompleted);\n          }\n        })\n        .catch(() => {\n          setError('Unable to update a todo');\n\n          const timer = setTimeout(() => {\n            setError('');\n          }, 3000);\n\n          return () => {\n            clearTimeout(timer);\n          };\n        })\n        .finally(() => {\n          setIsLoadingCompleted(false);\n        });\n    });\n  };\n\n  const updateTitle = (id: number, title: string) => {\n    if (title.trim() === '') {\n      deleteTodo(id);\n    }\n\n    const newTitle = {\n      id,\n      userId: USER_ID,\n      title,\n      completed: false,\n    };\n\n    setLoadingTodo(id);\n    setEditingTodo(0);\n    updateTodo(id, newTitle)\n      .then(res => {\n        const result = todos.map(item => {\n          if (item.id === res.id) {\n            return { ...item, title };\n          }\n\n          return item;\n        });\n\n        setTodos(result);\n      })\n      .catch(() => {\n        setError('Unable to update a todo');\n\n        const timer = setTimeout(() => {\n          setError('');\n        }, 3000);\n\n        return () => {\n          clearTimeout(timer);\n        };\n      })\n      .finally(() => {\n        setLoadingTodo(0);\n        setError('');\n      });\n  };\n\n  const handleDoubleClick = (id: number) => {\n    setEditingTodo(id);\n  };\n\n  const filteredTodos = statusTodos(todos, activeFilter);\n\n  if (!USER_ID) {\n    return <UserWarning />;\n  }\n\n  return (\n    <div className=\"todoapp\">\n      <h1 className=\"todoapp__title\">todos</h1>\n\n      <div className=\"todoapp__content\">\n        <TodoHeader\n          handleToggleAll={handleToggleAll}\n          todos={todos}\n          addTodo={addTodo}\n          isDisabled={isDisabled}\n          notCompletedTodosCount={notCompletedTodosCount}\n        />\n\n        <section className=\"todoapp__main\">\n          <TodoList\n            todos={filteredTodos}\n            handleChangeCompleted={handleChangeCompleted}\n            deleteTodo={deleteTodo}\n            updateTitle={updateTitle}\n            handleDoubleClick={handleDoubleClick}\n            setEditingTodo={setEditingTodo}\n            tempTodo={tempTodo}\n            deleteTodoId={deleteTodoId}\n            editingTodo={editingTodo}\n            loadingTodo={loadingTodo}\n            isLoadingCompleted={isLoadingCompleted}\n          />\n        </section>\n        {todos.length !== 0 && (\n          <footer className=\"todoapp__footer\">\n            <TodoFooter\n              handleFilter={setActiveFilter}\n              activeFilter={activeFilter}\n              notCompletedTodosCount={notCompletedTodosCount}\n              completedTodosCount={completedTodosCount}\n              handleClearCompleted={handleClearCompleted}\n            />\n          </footer>\n        )}\n      </div>\n\n      {error && (<TodoError error={error} setError={setError} />) }\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport { App } from './App';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}